#version: '3.8'
version: '3'

services:
  app:
    image: camper484/autvarunapp
    environment:
      - DISPLAY=unix$DISPLAY
    expose:
      - "8000"
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix

  tableau:
    image: dvsmaster/autvaruntableau
    environment:
      - DISPLAY=unix$DISPLAY
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
    stdin_open: true
    tty: true
    expose:
      - "7065"
    depends_on:
      - app

  ibmsas:
    image: dvsmaster/autvarunibmsas
    environment:
      - DISPLAY=unix$DISPLAY
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
    stdin_open: true
    tty: true
    expose:
      - "7066"
    depends_on:
      - app

  atom:
    image: dvsmaster/autvarunatom
    entrypoint: python runner.py
    environment:
      - DISPLAY=unix$DISPLAY
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
    stdin_open: true
    tty: true
    expose:
      - "7070"
    depends_on:
      - app

  jupyter:
    image: dvsmaster/autvarunjupyter
    environment:
      - DISPLAY=unix$DISPLAY
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
    stdin_open: true
    tty: true
    expose:
      - "7030"
    depends_on:
      - app

  jserver:
    image: jupyter/minimal-notebook
    environment:
      - DISPLAY=unix$DISPLAY
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
    stdin_open: true
    tty: true
    ports:
      - "8888:8888"
    depends_on:
      - app

  git:
    image: camper484/autvarungit
    environment:
      - DISPLAY=unix$DISPLAY
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
    stdin_open: true
    tty: true
    expose:
      - "8090"
    depends_on:
      - app

  orange:
    image: camper484/autvarunorange
    environment:
      - DISPLAY=unix$DISPLAY
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
    stdin_open: true
    tty: true
    expose:
      - "7075"
    depends_on:
      - app

  tensorflow:
    image: camper484/autvaruntensorflow
    environment:
      - DISPLAY=unix$DISPLAY
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
    stdin_open: true
    tty: true
    expose:
      - "7080"
    depends_on:
      - app

  spyder:
    image: camper484/autvarunspyderimg
    environment:
      - DISPLAY=unix$DISPLAY
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
    stdin_open: true
    tty: true
    expose:
      - "7085"
    depends_on:
      - app

  hadoopwrapper:
    image: camper484/autvarunhadoopwrapper
    environment:
      - DISPLAY=unix$DISPLAY
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
    stdin_open: true
    tty: true
    expose:
      - "7090"
    depends_on:
      - app

  rstudio:
    image: camper484/autvarunrstudio
    environment:
      - DISPLAY=unix$DISPLAY
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
    stdin_open: true
    tty: true
    expose:
      - "8085"
    depends_on:
      - app

  markdown:
    image: camper484/autvarunmarkdown
    environment:
      - DISPLAY=unix$DISPLAY
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
    stdin_open: true
    tty: true
    expose:
      - "8050"
    depends_on:
      - app

  spark:
    image: camper484/autvarunsparkwrapper
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - DISPLAY=unix$DISPLAY
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
    stdin_open: true
    tty: true
    ports:
      - '8080:8080'

  spark-worker-1:
    image: docker.io/bitnami/spark:3-debian-10
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no

  spark-worker-2:
    image: docker.io/bitnami/spark:3-debian-10
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no

  sonar-scanner:
    image: camper484/autvarunqubewrapper
    entrypoint: python runner.py
    environment:
      - DISPLAY=unix$DISPLAY
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
      - /scan
    links:
      - sonarqube
    stdin_open: true
    tty: true
    expose:
      - "8045"
    depends_on:
      - app
      - sonarqube

  sonarqube:
    image: newtmitch/sonar-server
    ports:
      - "9000:9000"
      - "9092:9092"
